package guardias_de_seguridad;

import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class Guardias extends javax.swing.JFrame {
    
    Conexion_config db = new Conexion_config();
    java.sql.Connection conexion = db.conectar();
    
    DefaultTableModel modelo;
    
    /**
     * Creates new form Guardias
     */
    public Guardias() {
        initComponents();
        this.setLocationRelativeTo(null);
        modelo = new DefaultTableModel();
        modelo.addColumn("Cédula");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Tipo de sangre");
        modelo.addColumn("Celular");
        this.table_guardias.setModel(modelo);
        try {
            leerTabla();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        title_guardias = new javax.swing.JLabel();
        text_cedula = new javax.swing.JLabel();
        text_nombre = new javax.swing.JLabel();
        text_apellido = new javax.swing.JLabel();
        text_fecha_de_nacimiento = new javax.swing.JLabel();
        text_tipo_de_sangre = new javax.swing.JLabel();
        text_celular = new javax.swing.JLabel();
        text_correo = new javax.swing.JLabel();
        text_total_de_servicios_solicitados = new javax.swing.JLabel();
        input_cedula = new javax.swing.JTextField();
        input_nombre = new javax.swing.JTextField();
        input_apellido = new javax.swing.JTextField();
        input_fecha_nacimiento = new javax.swing.JTextField();
        input_tipo_sangre = new javax.swing.JTextField();
        input_celular = new javax.swing.JTextField();
        input_correo = new javax.swing.JTextField();
        input_total_servicios = new javax.swing.JTextField();
        btn_registrar = new javax.swing.JButton();
        input_accion = new javax.swing.JTextField();
        combo_accion = new javax.swing.JComboBox<>();
        btn_accion = new javax.swing.JButton();
        scroll_guardias = new javax.swing.JScrollPane();
        table_guardias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Guardias");
        setResizable(false);

        background.setBackground(new java.awt.Color(232, 240, 242));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title_guardias.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        title_guardias.setForeground(new java.awt.Color(0, 0, 0));
        title_guardias.setText("Guardias");
        background.add(title_guardias, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 25, -1, -1));

        text_cedula.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_cedula.setForeground(new java.awt.Color(0, 0, 0));
        text_cedula.setText("Cédula");
        background.add(text_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 88, -1, -1));

        text_nombre.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_nombre.setForeground(new java.awt.Color(0, 0, 0));
        text_nombre.setText("Nombre");
        background.add(text_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 127, -1, -1));

        text_apellido.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_apellido.setForeground(new java.awt.Color(0, 0, 0));
        text_apellido.setText("Apellido");
        background.add(text_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 166, -1, -1));

        text_fecha_de_nacimiento.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_fecha_de_nacimiento.setForeground(new java.awt.Color(0, 0, 0));
        text_fecha_de_nacimiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        text_fecha_de_nacimiento.setText("<html><div style='text-align: right;'>Fecha de <br>nacimiento </div></html>");
        text_fecha_de_nacimiento.setToolTipText("");
        text_fecha_de_nacimiento.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        background.add(text_fecha_de_nacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 199, 70, 40));

        text_tipo_de_sangre.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_tipo_de_sangre.setForeground(new java.awt.Color(0, 0, 0));
        text_tipo_de_sangre.setText("Tipo de sangre");
        background.add(text_tipo_de_sangre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 249, 100, -1));

        text_celular.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_celular.setForeground(new java.awt.Color(0, 0, 0));
        text_celular.setText("Celular");
        background.add(text_celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 293, -1, -1));

        text_correo.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_correo.setForeground(new java.awt.Color(0, 0, 0));
        text_correo.setText("Correo");
        background.add(text_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(86, 336, -1, -1));

        text_total_de_servicios_solicitados.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        text_total_de_servicios_solicitados.setForeground(new java.awt.Color(0, 0, 0));
        text_total_de_servicios_solicitados.setText("<html><div style='text-align: right;'>Total de servicios <br>solicitados </div></html>");
        text_total_de_servicios_solicitados.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        background.add(text_total_de_servicios_solicitados, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 370, -1, -1));

        input_cedula.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_cedula.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 86, 217, 27));

        input_nombre.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_nombre.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 125, 217, 27));

        input_apellido.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_apellido.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 164, 217, 27));

        input_fecha_nacimiento.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_fecha_nacimiento.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_fecha_nacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 206, 217, 27));

        input_tipo_sangre.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_tipo_sangre.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_tipo_sangre, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 248, 217, 27));

        input_celular.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_celular.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 291, 217, 27));

        input_correo.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_correo.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 334, 217, 27));

        input_total_servicios.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        input_total_servicios.setForeground(new java.awt.Color(5, 55, 66));
        background.add(input_total_servicios, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 379, 217, 27));

        btn_registrar.setBackground(new java.awt.Color(162, 219, 250));
        btn_registrar.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        btn_registrar.setText("Registrar");
        btn_registrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_registrar.setFocusable(false);
        btn_registrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_registrarMouseClicked(evt);
            }
        });
        background.add(btn_registrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(146, 415, 217, 33));

        input_accion.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        background.add(input_accion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 86, 110, 27));

        combo_accion.setBackground(new java.awt.Color(232, 240, 242));
        combo_accion.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        combo_accion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Actualizar", "Eliminar", "Registrar" }));
        combo_accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_accionActionPerformed(evt);
            }
        });
        background.add(combo_accion, new org.netbeans.lib.awtextra.AbsoluteConstraints(506, 86, 110, 27));

        btn_accion.setBackground(new java.awt.Color(162, 219, 250));
        btn_accion.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        btn_accion.setText("Ejecutar");
        btn_accion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_accion.setFocusable(false);
        btn_accion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_accionMouseClicked(evt);
            }
        });
        background.add(btn_accion, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 86, 110, 27));

        table_guardias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cédula", "Nombre", "Apellido", "Tipo de sangre", "Celular"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_guardias.setRowHeight(25);
        scroll_guardias.setViewportView(table_guardias);

        background.add(scroll_guardias, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 122, 343, 284));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_accionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_accionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_accionActionPerformed

    private void btn_registrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_registrarMouseClicked
        //Obtener los datos de los inputs
        String cedula = input_cedula.getText();
        String nombre = input_nombre.getText();
        String apellido = input_apellido.getText();
        String fecha_nacimiento = input_fecha_nacimiento.getText();
        String tipo_sangre = input_tipo_sangre.getText();
        String celular = input_celular.getText();
        String correo = input_correo.getText();
        String total_servicios = input_total_servicios.getText();
        //Validar que los campos no esten vacíos
        if(cedula.length() == 0 || nombre.length() == 0 || apellido.length() == 0 || fecha_nacimiento.length() == 0 ||
           tipo_sangre.length() == 0 || celular.length() == 0 || correo.length() == 0 || total_servicios.length() == 0) {
            JOptionPane.showMessageDialog(null, "No debe dejar campos vacíos!", "Mensaje", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                String sql = "";
                String value_combo = (String) combo_accion.getSelectedItem();
                if(value_combo == "Actualizar") { //Actualizar los datos en la Base de Datos 
                    sql = "update guardia  set guar_cedula = '" + cedula + "', guar_nombre = '" + nombre + "', "
                            + "guar_apellido = '" + apellido + "', guar_fech_nacimiento = '" + fecha_nacimiento + "', "
                            + "guar_tipo_sangre = '" + tipo_sangre + "', guar_celular = '" + celular + "', "
                            + "guar_correo = '" + correo + "', total_servicios = '" + total_servicios + "' "
                            + "where guar_cedula = '" + cedula + "';";
                } else { //Insertar los datos en la Base de Datos
                    sql = "insert into guardia values ('" + cedula + "', '" + nombre + "', '" + apellido + "', '"
                        + fecha_nacimiento + "', '" + tipo_sangre + "', '" + celular + "', '" + correo + "', " 
                        + total_servicios + ");";
                }
                //System.out.println(sql);
                java.sql.Statement statement = conexion.createStatement();
                statement.executeUpdate(sql);
                if(value_combo == "Actualizar") {
                    JOptionPane.showMessageDialog(null, "Guardia actualizado!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Guardia registrado!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                }
                try {
                    //Limpiar la tabla
                    for( int i = modelo.getRowCount() - 1; i >= 0; i-- ) {
                        modelo.removeRow(i);
                    }
                    //Ingresar los datos a la tabla
                    leerTabla();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_registrarMouseClicked

    private void btn_accionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_accionMouseClicked
        //Obtener el valor del input
        String cedula_guardia = input_accion.getText();
        String value_combo = (String) combo_accion.getSelectedItem();
        if(value_combo == "Actualizar" || value_combo == "Eliminar") {
            if(cedula_guardia.length() == 0) {
                JOptionPane.showMessageDialog(null, "Digite una cédula de algún guardia registrado", 
                        "Error", JOptionPane.WARNING_MESSAGE);
            } else {
                if(value_combo == "Actualizar") {
                    try {
                    String sql = "select * from guardia where guar_cedula = '" + cedula_guardia + "';"; 
                    java.sql.Statement statement = conexion.createStatement();
                    ResultSet rs = statement.executeQuery(sql);

                    while (rs.next()){ //Extraemos el resultado de la consulta
                        input_cedula.setText(rs.getString(1));
                        input_nombre.setText(rs.getString(2));
                        input_apellido.setText(rs.getString(3));
                        input_fecha_nacimiento.setText(rs.getString(4));
                        input_tipo_sangre.setText(rs.getString(5));
                        input_celular.setText(rs.getString(6));
                        input_correo.setText(rs.getString(7));
                        input_total_servicios.setText(rs.getString(8));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
                }
                } else if(value_combo == "Eliminar") {
                    try {
                        //Eliminar el guardia
                        String sql = "delete from guardia where guar_cedula = '" + cedula_guardia + "';";
                        System.out.println(sql);
                        java.sql.Statement statement = conexion.createStatement();
                        statement.executeUpdate(sql);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
                    }
                    try {
                        //Limpiar la tabla
                        for( int i = modelo.getRowCount() - 1; i >= 0; i-- ) {
                            modelo.removeRow(i);
                        }
                        //Ingresar los datos a la tabla
                        leerTabla();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btn_accionMouseClicked
    
    public void leerTabla() throws SQLException{
        try {
            String sql = " select guar_cedula, guar_nombre, guar_apellido, guar_tipo_sangre, " +
                         " guar_celular from guardia order by guar_cedula; ";
            java.sql.Statement statement = conexion.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            String[] filas = new String[6];
            while(rs.next()){
                filas[0] = rs.getString(1);
                filas[1] = rs.getString(2);
                filas[2] = rs.getString(3);
                filas[3] = rs.getString(4);
                filas[4] = rs.getString(5);
                modelo.addRow(filas);
              }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage() , "Error", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guardias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guardias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guardias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guardias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guardias().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btn_accion;
    private javax.swing.JButton btn_registrar;
    private javax.swing.JComboBox<String> combo_accion;
    private javax.swing.JTextField input_accion;
    private javax.swing.JTextField input_apellido;
    private javax.swing.JTextField input_cedula;
    private javax.swing.JTextField input_celular;
    private javax.swing.JTextField input_correo;
    private javax.swing.JTextField input_fecha_nacimiento;
    private javax.swing.JTextField input_nombre;
    private javax.swing.JTextField input_tipo_sangre;
    private javax.swing.JTextField input_total_servicios;
    private javax.swing.JScrollPane scroll_guardias;
    private javax.swing.JTable table_guardias;
    private javax.swing.JLabel text_apellido;
    private javax.swing.JLabel text_cedula;
    private javax.swing.JLabel text_celular;
    private javax.swing.JLabel text_correo;
    private javax.swing.JLabel text_fecha_de_nacimiento;
    private javax.swing.JLabel text_nombre;
    private javax.swing.JLabel text_tipo_de_sangre;
    private javax.swing.JLabel text_total_de_servicios_solicitados;
    private javax.swing.JLabel title_guardias;
    // End of variables declaration//GEN-END:variables
}
